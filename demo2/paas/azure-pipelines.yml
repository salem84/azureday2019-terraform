trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  tfprefix: az19-demo2-paas
  azureSubscription: Enterprise Dev/Test (ee916e90-7521-4ab8-a247-78b45bd4e5be)

steps:
- bash: |
    echo Creazione ambiente con prefisso=$(tfprefix)

- task: TerraformTaskV1@0
  displayName: Terraform Init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/demo2/paas'
    backendServiceArm: '$(azureSubscription)'
    backendAzureRmResourceGroupName: 'az19-terraform'
    backendAzureRmStorageAccountName: 'az19terraform'
    backendAzureRmContainerName: 'terraform-state'
    backendAzureRmKey: 'demo2_paas.tfstate'

- task: TerraformTaskV1@0
  displayName: Terraform Plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/demo2/paas'
    commandOptions: '-out=$(System.ArtifactsDirectory)/plan.dat -var="prefix=$(tfprefix)"'
    environmentServiceNameAzureRM: '$(azureSubscription)'

- task: TerraformTaskV1@0
  displayName: Terraform Apply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/demo2/paas'
    commandOptions: '$(System.ArtifactsDirectory)/plan.dat'
    #commandOptions: '-var="prefix=$(tfprefix)"'
    environmentServiceNameAzureRM: '$(azureSubscription)'
