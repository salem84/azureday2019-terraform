trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  workingDirectory: $(System.DefaultWorkingDirectory)/demo3/iaas_sp
  tfPlanFile: $(System.ArtifactsDirectory)/plan.dat
  azureSubscription: Enterprise Dev/Test (ee916e90-7521-4ab8-a247-78b45bd4e5be)

steps:
- task: FileTransform@1
  displayName: Write Terraform variables
  inputs:
    folderPath: '$(workingDirectory)'
    fileType: 'json'
    targetFiles: 'release.tfvars.json'

- task: TerraformTaskV1@0
  displayName: Terraform Init
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(workingDirectory)'
    backendServiceArm: '$(azureSubscription)'
    backendAzureRmResourceGroupName: 'az19-terraform'
    backendAzureRmStorageAccountName: 'az19terraform'
    backendAzureRmContainerName: 'terraform-state'
    backendAzureRmKey: 'demo3_iaas_sp.tfstate'

- task: TerraformTaskV1@0
  displayName: Terraform Plan
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(workingDirectory)'
    commandOptions: '-out=$(tfPlanFile) -var-file="release.tfvars.json"'
    environmentServiceNameAzureRM: '$(azureSubscription)'

- task: TerraformTaskV1@0
  displayName: Terraform Apply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(workingDirectory)'
    commandOptions: '$(tfPlanFile)'
    environmentServiceNameAzureRM: '$(azureSubscription)'